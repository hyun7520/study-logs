database can handle larger amounts more efficiently, compactly
provide tools for easy insertion, query, update
offer security and control


sql: mysql, oracle, sqlite
no-sql database: mongodb, couch db

---------------------------------------------------------------------------------------
sql - relational database, use structured query language, share basic syntax
-> everything is done in tables: define schema, define preset tables
-> ex) book db
        id, author, title

define the structure like above, every entry must have does fields. 
cannot alter the structure for one entry
ex) to create table for each books comment, one must define a new table

after db is made, sql dbs have realtion with one another
ex) comments db had a book_id to reference the book
relating one cooment to one book or multiple comments on one book and the other way around

----> pre-define dbs and relate them to one another by referencing

---------------------------------------------------------------------------------------
no-sql -> not like sql, they use whole bunch of things, diverse


why use mongodb -> popular pairing with node and express
!!! mongosh in the terminal !!!

use name -> create db or switch to existing db
ctrl + c to exit
show dbs -> show dbs, if nothing is in the db it won't show up on the console

mongodb expects json and BSON
jsom problems : text based formats are slow to parse, not space efficient, not support large data type
BSON(binary json): write as json but mongo stores it as binary
                   in a file physically looks like it takes more space but in memory use much less

BSON : can store data types that is not supported in JSON -> dates, Raw Bindary

show collections -> shows collections of data: container
db.collection.insertOne : insert data
db.collection.find() : show all datas, returns a cursor(reference, pointer)
in data unique id is automatically created